function disable_interaction(){$("button").each(function(){$(this).hide()});$("#navigation > li > a").each(function(){$(this).removeAttr("data-toggle")})}$(function(){allowed_extensions="";$.get("/misc/allowed_upload_extensions",function(f){allowed_extensions=f});$("#no-token-explanation").click(function(){$.get("/misc/no_explanation");$("#token-explanation").slideUp()});$.validator.addMethod("validtoken",function(h,g){var f=this.optional(g)||/^[a-z]{5,15}$/.test(h);return f},"Your token's between 5 and 15 characters.<br />It doesn't have any numbers or strange characters.");$.validator.addMethod("validextensions",function(i,g){var h=new RegExp("^.*..("+allowed_extensions+")$","i");var f=this.optional(g)||h.test(i);return f},"You need to upload a raw VCF file or any one of the supported compression formats. File extension is important.");$("#tokencheck").validate({rules:{token:{required:true,validtoken:true}},messages:{token:{required:"You need to give me a token"}},errorContainer:"#tokencheck-messages",errorLabelContainer:"#tokencheck-messages",errorElement:"span",wrapper:""});var e=false;$("#vcfupload").validate({rules:{vcf:{required:function(){return $("#uri").val()==""},validextensions:true},uri:{required:function(){return $("#vcf").val()==""},url:true},min_variant_quality:{required:true,min:0,digits:true},min_quality_depth:{required:true,min:0,digits:true},homozyg_window_size:{required:true,min:0,digits:true},heterozyg_calls:{required:true,min:0,digits:true}},messages:{vcf:{validextensions:"You need to specify a valid input file"},uri:{url:"You need to specify a valid URI"},min_variant_quality:{required:"You need to specify minimum variant quality",digits:"All values need to be integers"},min_quality_depth:{required:"You need to specify proper quality depth",digits:"All values need to be integers"},homozyg_window_size:{required:"You need to specify proper homozygosity window size",digits:"All values need to be integers"},heterozyg_calls:{required:"You need to specify proper number of heterozygous calls allowed in window",digits:"All values need to be integers"}},errorPlacement:function(f,g){var h=g.attr("name");$("#"+h+"-error-messages").append(f)},errorElement:"span",wrapper:"",success:function(){$(".label-error").hide();e=true}});$("#uri-submit").click(function(){if(e){disable_interaction();$("#uri-example > span").show()}});var c=$(".bar");var b=$(".percent");var a=$("#visual-progress");b.html("0%");$("#submit").click(function(){$("#vcfupload").ajaxForm({beforeSend:function(){var f="0%";c.width(f);b.html(f);a.slideDown();$(".hide-after-submit").hide();disable_interaction()},uploadProgress:function(j,f,i,h){var g=h+"%";c.width(g);b.html(g)},complete:function(f){$(".hide-after-submit ").fadeOut();if(!f.getResponseHeader("token")){window.location.href="/misc/oops"}window.location.href="/token/"+f.getResponseHeader("token")}})});$("#min_variant_quality").slider({min:0,max:99,step:1,value:30,tooltip:"hide"}).on("slide",function(f){$("#min_variant_quality-value").html(f.value)});function d(p,n){var v=/(^-?[0-9]+(\.?[0-9]*)[df]?e?[0-9]?$|^0x[0-9a-f]+$|[0-9]+)/gi,u=/(^[ ]*|[ ]*$)/g,l=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,j=/^0x[0-9a-f]+$/i,f=/^0/,q=p.toString().replace(u,"")||"",m=n.toString().replace(u,"")||"",s=q.replace(v,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),i=m.replace(v,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),h=parseInt(q.match(j))||(s.length!=1&&q.match(l)&&Date.parse(q)),t=parseInt(m.match(j))||h&&m.match(l)&&Date.parse(m)||null;if(t){if(h<t){return -1}else{if(h>t){return 1}}}for(var o=0,g=Math.max(s.length,i.length);o<g;o++){var r=!(s[o]||"").match(f)&&parseFloat(s[o])||s[o]||0;var k=!(i[o]||"").match(f)&&parseFloat(i[o])||i[o]||0;if(isNaN(r)!==isNaN(k)){return(isNaN(r))?1:-1}else{if(typeof r!==typeof k){r+="";k+=""}}if(r<k){return -1}if(r>k){return 1}}return 0}jQuery.extend(jQuery.fn.dataTableExt.oSort,{"natural-asc":function(g,f){return d(g,f)},"natural-desc":function(g,f){return d(g,f)*-1}});jQuery.extend(jQuery.fn.dataTableExt.oSort,{"formatted-num-pre":function(f){f=(f==="-"||f==="")?0:f.replace(/[^\d\-\.]/g,"");return parseFloat(f)},"formatted-num-asc":function(g,f){return g-f},"formatted-num-desc":function(g,f){return f-g}});$("#bed-table").dataTable({aoColumns:[{sType:"natural"},{sType:"formatted-num"},{sType:"formatted-num"},null,null],bFilter:false,bPaginate:false,bInfo:false,})});